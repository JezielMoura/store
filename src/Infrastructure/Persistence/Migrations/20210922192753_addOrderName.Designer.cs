// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Mobnet.Store.Infrastructure.Persistence;

#nullable disable

namespace Mobnet.Store.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(StoreContext))]
    [Migration("20210922192753_addOrderName")]
    partial class addOrderName
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0-rc.1.21452.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Mobnet.Store.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Value")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Mobnet.Store.Domain.Entities.OrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Discount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MaxDiscount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Quantity")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Total")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItem");
                });

            modelBuilder.Entity("Mobnet.Store.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Code")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MaxDiscount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PurchasePrice")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("Stock")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("StockMin")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0bc3a9e9-555c-4895-a229-142a30b061fa"),
                            Code = 1L,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            LastModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxDiscount = 10m,
                            Name = "Biquine",
                            Price = 99.90m,
                            PurchasePrice = 38.90m,
                            Stock = 4m,
                            StockMin = 2m
                        },
                        new
                        {
                            Id = new Guid("157f6d24-5094-4f1d-8296-e31cf7d67105"),
                            Code = 2L,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Preto",
                            LastModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxDiscount = 10m,
                            Name = "Boné Nike",
                            Price = 12m,
                            PurchasePrice = 24.90m,
                            Stock = 5m,
                            StockMin = 3m
                        },
                        new
                        {
                            Id = new Guid("99f89f27-a304-4158-a870-70d09ff4638d"),
                            Code = 3L,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            LastModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxDiscount = 10m,
                            Name = "Snorkel",
                            Price = 14m,
                            PurchasePrice = 29.90m,
                            Stock = 8m,
                            StockMin = 4m
                        },
                        new
                        {
                            Id = new Guid("d76780d5-ae2e-4857-a77b-1d5f31fe0607"),
                            Code = 4L,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            LastModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxDiscount = 10m,
                            Name = "Chapeu",
                            Price = 27.90m,
                            PurchasePrice = 12m,
                            Stock = 4m,
                            StockMin = 2m
                        },
                        new
                        {
                            Id = new Guid("388fe520-f5df-431c-8069-5347475ea2d4"),
                            Code = 5L,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            LastModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxDiscount = 10m,
                            Name = "Saída de Praia",
                            Price = 78.90m,
                            PurchasePrice = 33m,
                            Stock = 4m,
                            StockMin = 2m
                        },
                        new
                        {
                            Id = new Guid("90d3481d-cfbb-42d8-ae86-296c8c604671"),
                            Code = 6L,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            LastModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxDiscount = 10m,
                            Name = "Canga",
                            Price = 99.90m,
                            PurchasePrice = 40m,
                            Stock = 4m,
                            StockMin = 2m
                        },
                        new
                        {
                            Id = new Guid("3f30671f-99c4-458e-bc48-3036c41f5412"),
                            Code = 7L,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            LastModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxDiscount = 10m,
                            Name = "Óculos'",
                            Price = 19.90m,
                            PurchasePrice = 8m,
                            Stock = 10m,
                            StockMin = 5m
                        },
                        new
                        {
                            Id = new Guid("2077e84d-3998-4b7d-9454-02063b6362c6"),
                            Code = 8L,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Pequena",
                            LastModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxDiscount = 10m,
                            Name = "Namoradeira",
                            Price = 24.90m,
                            PurchasePrice = 12m,
                            Stock = 4m,
                            StockMin = 2m
                        },
                        new
                        {
                            Id = new Guid("0df40232-27a9-43a3-a69f-27a110f9a4a6"),
                            Code = 9L,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "M",
                            LastModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxDiscount = 10m,
                            Name = "Sunga",
                            Price = 29.90m,
                            PurchasePrice = 17m,
                            Stock = 10m,
                            StockMin = 4m
                        },
                        new
                        {
                            Id = new Guid("780be182-9662-46d3-9dcc-a59f6f8dcc2b"),
                            Code = 10L,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "M",
                            LastModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxDiscount = 10m,
                            Name = "UV",
                            Price = 59.90m,
                            PurchasePrice = 23m,
                            Stock = 18m,
                            StockMin = 10m
                        });
                });

            modelBuilder.Entity("Mobnet.Store.Domain.Entities.OrderItem", b =>
                {
                    b.HasOne("Mobnet.Store.Domain.Entities.Order", "Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Mobnet.Store.Domain.Entities.Order", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
